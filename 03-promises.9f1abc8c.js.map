{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAKA,SAASC,EAAcC,EAAUC,GAC7B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAACN,E,MAAUC,IAEnBM,EAAO,C,SAACP,E,MAAUC,GAAO,GAE1BA,EAAM,G,CAZFQ,SAASC,cAAc,SAC/BC,iBAAiB,UAetB,SAAoBC,GAClBA,EAAMC,iBACN,MACEC,UAAYb,MAAAc,EAAKC,KAAEA,EAAIC,OAAEA,IACvBL,EAAMM,cACV,IAAIC,EAAaC,OAAOL,EAAMM,OAC1BC,EAAYF,OAAOJ,EAAKK,OACxBE,EAAgBH,OAAOH,EAAOI,OAClC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAeC,GAAK,EACrCzB,EAAcyB,EAAGL,GAChBM,MAAK,EAACzB,SAAEA,EAAQC,MAAEA,MACjByB,EAAA7B,GAAS8B,OAAOC,QAAQ,uBAAqB5B,QAAiBC,MAAU,IAEzE4B,OAAM,EAAC7B,SAAEA,EAAQC,MAAEA,MAClByB,EAAA7B,GAAS8B,OAAOG,QAAQ,sBAAoB9B,QAAeC,MAAU,IAEvEkB,GAAcG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector(\".form\");\nform.addEventListener(\"submit\", onFormData);\n\nfunction createPromise(position, delay) {\n    const shouldResolve = Math.random() > 0.3;\n    return new Promise((resolve, reject) => {\n      setTimeout(() => { \n        if (shouldResolve) {\n          resolve({position, delay});\n        } else {\n          reject({position, delay});\n        }\n      }, delay)\n  })\n  }\n\nfunction onFormData(event) {\n  event.preventDefault()\n  const {\n    elements: { delay, step, amount}\n  } = event.currentTarget;\n  let firstDelay = Number(delay.value);\n  let delayStep = Number(step.value);\n  let currentAmount = Number(amount.value);\n  for (let i = 1; i <= currentAmount; i += 1) {\n      createPromise(i, firstDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      })\n      firstDelay += delayStep;\n  }\n}"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","event","preventDefault","elements","delay1","step","amount","currentTarget","firstDelay","Number","value","delayStep","currentAmount","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.9f1abc8c.js.map"}